{"version":3,"file":"static/js/229.4cbecfc9.chunk.js","mappings":"wIACA,QAAwB,yBAAxB,EAA+D,+BAA/D,EAA0G,6BAA1G,EAAqJ,+BAArJ,EAAqM,kCCArM,EAA+D,6BAA/D,EAA2G,6BAA3G,EAA+J,qCAA/J,EAA6N,uCAA7N,EAAoR,8BAApR,EAAoU,gC,yBCOpU,MA0CA,EA1C6BA,IAC3B,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,GAE3C,OACEC,EAAAA,EAAAA,MAAA,MAAIC,UAAWC,EAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAmBC,UAChCC,EAAAA,EAAAA,KAAA,OACEH,UAAWC,EACXG,IAAKT,EAAMU,QAAQC,UACnBC,IAAG,IAAAC,OAAMb,EAAMc,KAAKC,MAAK,KAAAF,OAAIb,EAAMc,KAAKE,KAAI,KAC5CC,aAAcA,IAAMf,GAAa,GACjCgB,aAAcA,IAAMhB,GAAa,QAGrCM,EAAAA,EAAAA,KAAA,MACEH,UACEJ,EAAS,GAAAY,OACFP,EAAkB,KAAAO,OAAIP,GAA0B,GAAAO,OAChDP,EAAkB,KAAAO,OAAIP,GAC9BC,UAEDC,EAAAA,EAAAA,KAAA,OACEH,UAAWC,EACXG,IAAKT,EAAMU,QAAQS,MACnBP,IAAG,IAAAC,OAAMb,EAAMc,KAAKC,MAAK,KAAAF,OAAIb,EAAMc,KAAKE,KAAI,UAGhDZ,EAAAA,EAAAA,MAAA,MAAIC,UAAWC,EAAmBC,SAAA,CAC/BP,EAAMc,KAAKC,MAAM,IAAEf,EAAMc,KAAKE,SAEjCZ,EAAAA,EAAAA,MAAA,MAAIC,UAAWC,EAAmBC,SAAA,CAC/BP,EAAMoB,SAASC,MAAM,IAAErB,EAAMoB,SAASE,SAEzCd,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAmBC,SAAEP,EAAMuB,SAC1Cf,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAmBC,SAAEP,EAAMwB,SAC1ChB,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAmBC,UC3CVkB,ED4CPzB,EAAM0B,WAAWC,KCzC/BF,EAAWG,MAAM,KAAK,GAAGA,MAAM,KAAKC,UAAUC,KAAK,WAHrD,IAAuBL,CD8CrB,E,YEhCT,MAmCA,EAnC8BzB,IAE1BQ,EAAAA,EAAAA,KAAAuB,EAAAA,SAAA,CAAAxB,SACGP,EAAMgC,QAAQC,OAAS,GACtB7B,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAYC,SAAA,EAC5BH,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAkBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAgBC,SAAC,UAChCC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAgBC,SAAC,WAChCC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAgBC,SAAC,WAChCC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAgBC,SAAC,kBAChCC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAgBC,SAAC,oBAElCC,EAAAA,EAAAA,KAAA,SAAOH,UAAWC,EAAkBC,SACjCP,EAAMgC,QAAQE,KAAI,CAACC,EAAaC,KAC/B5B,EAAAA,EAAAA,KAAC6B,EAAM,CAELvB,KAAMqB,EAAGrB,KACTS,MAAOY,EAAGZ,MACVb,QAASyB,EAAGzB,QACZU,SAAUe,EAAGf,SACbI,MAAOW,EAAGX,MACVE,WAAYS,EAAGT,YANVU,UAWVpC,EAAMsC,SAGT9B,EAAAA,EAAAA,KAAC+B,EAAAA,EAAS,KAFV/B,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAqBC,SAAC,mB","sources":["webpack://stmlabs-test/./src/components/Container/Container.module.scss?9ade","webpack://stmlabs-test/./src/components/Person/Person.module.scss?1dbf","components/Person/Person.tsx","utils/Utils.ts","components/Container/Container.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"table\":\"Container_table__YXPup\",\"table__head\":\"Container_table__head__HrDVm\",\"table__th\":\"Container_table__th__+0WY+\",\"table__body\":\"Container_table__body__85-6T\",\"table__nomatch\":\"Container_table__nomatch__Tpmnt\"};","// extracted by mini-css-extract-plugin\nexport default {\"person\":\"Person_person__UIOXY\",\"person__list\":\"Person_person__list__PYhhz\",\"person__item\":\"Person_person__item__wCBDM\",\"person__item_visible\":\"Person_person__item_visible__MTzvl\",\"person__item_invisible\":\"Person_person__item_invisible__hTj6m\",\"person__image\":\"Person_person__image__Zvf9e\",\"person__tooltip\":\"Person_person__tooltip__W0NZe\"};","import style from \"./Person.module.scss\";\r\n\r\nimport { FC, useState } from \"react\";\r\n\r\nimport TPerson from \"../../types/person\";\r\n\r\nimport { transformDate } from \"../../utils/Utils\";\r\n\r\nconst Person: FC<TPerson> = (props) => {\r\n  const [isHovered, setIsHovered] = useState(false);\r\n\r\n  return (\r\n    <tr className={style.person__list}>\r\n      <td className={style.person__item}>\r\n        <img\r\n          className={style.person__image}\r\n          src={props.picture.thumbnail}\r\n          alt={`'${props.name.first} ${props.name.last}'`}\r\n          onMouseEnter={() => setIsHovered(true)}\r\n          onMouseLeave={() => setIsHovered(false)}\r\n        />\r\n      </td>\r\n      <td\r\n        className={\r\n          isHovered\r\n            ? `${style.person__item} ${style.person__item_visible}`\r\n            : `${style.person__item} ${style.person__item_invisible}`\r\n        }\r\n      >\r\n        <img\r\n          className={style.person__tooltip}\r\n          src={props.picture.large}\r\n          alt={`'${props.name.first} ${props.name.last}'`}\r\n        />\r\n      </td>\r\n      <td className={style.person__item}>\r\n        {props.name.first} {props.name.last}\r\n      </td>\r\n      <td className={style.person__item}>\r\n        {props.location.state} {props.location.city}\r\n      </td>\r\n      <td className={style.person__item}>{props.email}</td>\r\n      <td className={style.person__item}>{props.phone}</td>\r\n      <td className={style.person__item}>\r\n        {transformDate(props.registered.date)}\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","export function transformDate(dateString: string) {\r\n  // const date = dateString.split('T')[0]\r\n  // const res = dateString.split('T')[0].split('-').reverse().join('.')\r\n  return dateString.split(\"T\")[0].split(\"-\").reverse().join(\".\");\r\n}\r\n","import { FC } from \"react\";\r\n\r\nimport style from \"./Container.module.scss\";\r\n\r\nimport Person from \"../Person/Person\";\r\n\r\nimport TPerson from \"../../types/person\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\ninterface Props {\r\n  persons: TPerson[];\r\n  isEmpty: boolean;\r\n}\r\n\r\nconst Container: FC<Props> = (props) => {\r\n  return (\r\n    <>\r\n      {props.persons.length > 0 ? (\r\n        <table className={style.table}>\r\n          <thead className={style.table__head}>\r\n            <th className={style.table__th}>Name</th>\r\n            <th className={style.table__th}>Local</th>\r\n            <th className={style.table__th}>Email</th>\r\n            <th className={style.table__th}>Phone number</th>\r\n            <th className={style.table__th}>Registrated</th>\r\n          </thead>\r\n          <tbody className={style.table__body}>\r\n            {props.persons.map((el: TPerson, ind: number) => (\r\n              <Person\r\n                key={ind}\r\n                name={el.name}\r\n                email={el.email}\r\n                picture={el.picture}\r\n                location={el.location}\r\n                phone={el.phone}\r\n                registered={el.registered}\r\n              />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : !props.isEmpty ? (\r\n        <p className={style.table__nomatch}>Nothing Found</p>\r\n      ) : (\r\n        <Preloader />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n"],"names":["props","isHovered","setIsHovered","useState","_jsxs","className","style","children","_jsx","src","picture","thumbnail","alt","concat","name","first","last","onMouseEnter","onMouseLeave","large","location","state","city","email","phone","dateString","registered","date","split","reverse","join","_Fragment","persons","length","map","el","ind","Person","isEmpty","Preloader"],"sourceRoot":""}